{"resourceType":"StructureMap","id":"TestScript4to5","text":{"status":"generated","div":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><pre class=\"fml\">\r\n<span style=\"color: #cc00cc\">/// <b>url</b> = </span><span style=\"color: blue\">'http://hl7.org/fhir/StructureMap/TestScript4to5'</span>\r\n<span style=\"color: #cc00cc\">/// <b>name</b> = </span><span style=\"color: blue\">'TestScript4to5'</span>\r\n<span style=\"color: #cc00cc\">/// <b>title</b> = </span><span style=\"color: blue\">'FML Conversion for TestScript: R4 to R5'</span>\r\n<span style=\"color: #cc00cc\">/// <b>status</b> = </span><span style=\"color: blue\">'active'</span>\r\n\r\n<b>conceptmap</b><span style=\"color: navy\"> &quot;</span>AssertionDirectionType<span style=\"color: navy\">&quot; {\r\n</span><b>  prefix </b>s<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R4/codesystem-assert-direction-codes.html\" title=\"AssertionDirectionType\">http://hl7.org/fhir/4.0/assert-direction-codes</a><span style=\"color: navy\">&quot;\r\n</span><b>  prefix </b>t<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R5/codesystem-assert-direction-codes.html\" title=\"Assertion Direction Type\">http://hl7.org/fhir/assert-direction-codes</a><span style=\"color: navy\">&quot;\r\n</span>\r\n  s<span style=\"color: navy\">:</span>response <b>-</b> t<span style=\"color: navy\">:</span>response\r\n  s<span style=\"color: navy\">:</span>request <b>-</b> t<span style=\"color: navy\">:</span>request\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>conceptmap</b><span style=\"color: navy\"> &quot;</span>AssertionOperatorType<span style=\"color: navy\">&quot; {\r\n</span><b>  prefix </b>s<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R4/codesystem-assert-operator-codes.html\" title=\"AssertionOperatorType\">http://hl7.org/fhir/4.0/assert-operator-codes</a><span style=\"color: navy\">&quot;\r\n</span><b>  prefix </b>t<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R5/codesystem-assert-operator-codes.html\" title=\"Assertion Operator Type\">http://hl7.org/fhir/assert-operator-codes</a><span style=\"color: navy\">&quot;\r\n</span>\r\n  s<span style=\"color: navy\">:</span>equals <b>-</b> t<span style=\"color: navy\">:</span>equals\r\n  s<span style=\"color: navy\">:</span>notEquals <b>-</b> t<span style=\"color: navy\">:</span>notEquals\r\n  s<span style=\"color: navy\">:</span>in <b>-</b> t<span style=\"color: navy\">:</span>in\r\n  s<span style=\"color: navy\">:</span>notIn <b>-</b> t<span style=\"color: navy\">:</span>notIn\r\n  s<span style=\"color: navy\">:</span>greaterThan <b>-</b> t<span style=\"color: navy\">:</span>greaterThan\r\n  s<span style=\"color: navy\">:</span>lessThan <b>-</b> t<span style=\"color: navy\">:</span>lessThan\r\n  s<span style=\"color: navy\">:</span>empty <b>-</b> t<span style=\"color: navy\">:</span>empty\r\n  s<span style=\"color: navy\">:</span>notEmpty <b>-</b> t<span style=\"color: navy\">:</span>notEmpty\r\n  s<span style=\"color: navy\">:</span>contains <b>-</b> t<span style=\"color: navy\">:</span>contains\r\n  s<span style=\"color: navy\">:</span>notContains <b>-</b> t<span style=\"color: navy\">:</span>notContains\r\n  s<span style=\"color: navy\">:</span>eval <b>-</b> t<span style=\"color: navy\">:</span>eval\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>conceptmap</b><span style=\"color: navy\"> &quot;</span>AssertionResponseTypes<span style=\"color: navy\">&quot; {\r\n</span><b>  prefix </b>s<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R4/codesystem-assert-response-code-types.html\" title=\"AssertionResponseTypes\">http://hl7.org/fhir/4.0/assert-response-code-types</a><span style=\"color: navy\">&quot;\r\n</span><b>  prefix </b>t<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R5/codesystem-assert-response-code-types.html\" title=\"Assertion Response Types\">http://hl7.org/fhir/assert-response-code-types</a><span style=\"color: navy\">&quot;\r\n</span>\r\n  s<span style=\"color: navy\">:</span>okay <b>-</b> t<span style=\"color: navy\">:</span>okay\r\n  s<span style=\"color: navy\">:</span>created <b>-</b> t<span style=\"color: navy\">:</span>created\r\n  s<span style=\"color: navy\">:</span>noContent <b>-</b> t<span style=\"color: navy\">:</span>noContent\r\n  s<span style=\"color: navy\">:</span>notModified <b>-</b> t<span style=\"color: navy\">:</span>notModified\r\n  s<span style=\"color: navy\">:</span>bad <b>-</b> t<span style=\"color: navy\">:</span>badRequest\r\n  s<span style=\"color: navy\">:</span>forbidden <b>-</b> t<span style=\"color: navy\">:</span>forbidden\r\n  s<span style=\"color: navy\">:</span>notFound <b>-</b> t<span style=\"color: navy\">:</span>notFound\r\n  s<span style=\"color: navy\">:</span>methodNotAllowed <b>-</b> t<span style=\"color: navy\">:</span>methodNotAllowed\r\n  s<span style=\"color: navy\">:</span>conflict <b>-</b> t<span style=\"color: navy\">:</span>conflict\r\n  s<span style=\"color: navy\">:</span>gone <b>-</b> t<span style=\"color: navy\">:</span>gone\r\n  s<span style=\"color: navy\">:</span>preconditionFailed <b>-</b> t<span style=\"color: navy\">:</span>preconditionFailed\r\n  s<span style=\"color: navy\">:</span>unprocessable <b>-</b> t<span style=\"color: navy\">:</span>unprocessableContent\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>conceptmap</b><span style=\"color: navy\"> &quot;</span>PublicationStatus<span style=\"color: navy\">&quot; {\r\n</span><b>  prefix </b>s<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R4/codesystem-publication-status.html\" title=\"PublicationStatus\">http://hl7.org/fhir/4.0/publication-status</a><span style=\"color: navy\">&quot;\r\n</span><b>  prefix </b>t<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R5/codesystem-publication-status.html\" title=\"PublicationStatus\">http://hl7.org/fhir/publication-status</a><span style=\"color: navy\">&quot;\r\n</span>\r\n  s<span style=\"color: navy\">:</span>draft <b>-</b> t<span style=\"color: navy\">:</span>draft\r\n  s<span style=\"color: navy\">:</span>active <b>-</b> t<span style=\"color: navy\">:</span>active\r\n  s<span style=\"color: navy\">:</span>retired <b>-</b> t<span style=\"color: navy\">:</span>retired\r\n  s<span style=\"color: navy\">:</span>unknown <b>-</b> t<span style=\"color: navy\">:</span>unknown\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>conceptmap</b><span style=\"color: navy\"> &quot;</span>TestScriptRequestMethodCode<span style=\"color: navy\">&quot; {\r\n</span><b>  prefix </b>s<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R4/codesystem-http-operations.html\" title=\"TestScriptRequestMethodCode\">http://hl7.org/fhir/4.0/http-operations</a><span style=\"color: navy\">&quot;\r\n</span><b>  prefix </b>t<span style=\"color: navy\"> = &quot;</span><a href=\"http://hl7.org/fhir/R5/codesystem-http-operations.html\" title=\"Test Script Request Method Code\">http://hl7.org/fhir/http-operations</a><span style=\"color: navy\">&quot;\r\n</span>\r\n  s<span style=\"color: navy\">:</span>delete <b>-</b> t<span style=\"color: navy\">:</span>delete\r\n  s<span style=\"color: navy\">:</span>get <b>-</b> t<span style=\"color: navy\">:</span>get\r\n  s<span style=\"color: navy\">:</span>options <b>-</b> t<span style=\"color: navy\">:</span>options\r\n  s<span style=\"color: navy\">:</span>patch <b>-</b> t<span style=\"color: navy\">:</span>patch\r\n  s<span style=\"color: navy\">:</span>post <b>-</b> t<span style=\"color: navy\">:</span>post\r\n  s<span style=\"color: navy\">:</span>put <b>-</b> t<span style=\"color: navy\">:</span>put\r\n  s<span style=\"color: navy\">:</span>head <b>-</b> t<span style=\"color: navy\">:</span>head\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>uses</b><span style=\"color: navy\"> &quot;</span><a href=\"http://hl7.org/fhir/R4/testscript.html\" title=\"TestScript\">http://hl7.org/fhir/4.0/StructureDefinition/TestScript</a><span style=\"color: navy\">&quot; </span><b>alias </b>TestScriptR4 <b>as </b><b>source</b>\r\n<b>uses</b><span style=\"color: navy\"> &quot;</span><a href=\"http://hl7.org/fhir/R5/testscript.html\" title=\"TestScript\">http://hl7.org/fhir/StructureDefinition/TestScript</a><span style=\"color: navy\">&quot; </span><b>alias </b>TestScriptR5 <b>as </b><b>target</b>\r\n\r\n<b>imports</b><span style=\"color: navy\"> &quot;</span>http://hl7.org/fhir/StructureMap/*4to5<span style=\"color: navy\">&quot;\r\n</span>\r\n<b>group </b>TestScript<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span><span style=\"color: navy\"> : </span>TestScriptR4, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\"> : </span>TestScriptR5<span style=\"color: navy\">)</span><b> extends </b>DomainResource<b> &lt;&lt;type+&gt;&gt;</b><span style=\"color: navy\"> {\r\n</span>  src.url<span style=\"color: navy\"><b> -&gt; </b></span>tgt.url<span style=\"color: navy\">;</span>\r\n  src.identifier<span style=\"color: navy\"><b> -&gt; </b></span>tgt.identifier<span style=\"color: navy\">;</span>\r\n  src.version<span style=\"color: navy\"><b> -&gt; </b></span>tgt.version<span style=\"color: navy\">;</span>\r\n  src.name<span style=\"color: navy\"><b> -&gt; </b></span>tgt.name<span style=\"color: navy\">;</span> <span style=\"color: navy\">// </span><span style=\"color: green\">src.versionAlgorithm : string -&gt; tgt.versionAlgorithm;</span>\r\n  src.title<span style=\"color: navy\"><b> -&gt; </b></span>tgt.title<span style=\"color: navy\">;</span>\r\n  src.status<b> as </b><span style=\"color: maroon\">v</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.status = <b>translate</b><span style=\"color: navy\">(</span><span style=\"color: maroon\">v</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'#PublicationStatus'</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'code'</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.experimental<span style=\"color: navy\"><b> -&gt; </b></span>tgt.experimental<span style=\"color: navy\">;</span>\r\n  src.date<span style=\"color: navy\"><b> -&gt; </b></span>tgt.date<span style=\"color: navy\">;</span>\r\n  src.publisher<span style=\"color: navy\"><b> -&gt; </b></span>tgt.publisher<span style=\"color: navy\">;</span>\r\n  src.contact<span style=\"color: navy\"><b> -&gt; </b></span>tgt.contact<span style=\"color: navy\">;</span>\r\n  src.description<span style=\"color: navy\"><b> -&gt; </b></span>tgt.description<span style=\"color: navy\">;</span>\r\n  src.useContext<span style=\"color: navy\"><b> -&gt; </b></span>tgt.useContext<span style=\"color: navy\">;</span>\r\n  src.jurisdiction<span style=\"color: navy\"><b> -&gt; </b></span>tgt.jurisdiction<span style=\"color: navy\">;</span>\r\n  src.purpose<span style=\"color: navy\"><b> -&gt; </b></span>tgt.purpose<span style=\"color: navy\">;</span>\r\n  src.copyright<span style=\"color: navy\"><b> -&gt; </b></span>tgt.copyright<span style=\"color: navy\">;</span>\r\n  src.origin<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.origin<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptOrigin<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span> <span style=\"color: navy\">// </span><span style=\"color: green\">src.copyrightLabel -&gt; tgt.copyrightLabel;</span>\r\n  src.destination<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.destination<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptDestination<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.metadata<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.metadata<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptMetadata<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.fixture<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.fixture<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptFixture<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span> <span style=\"color: navy\">// </span><span style=\"color: green\">src.scope as s -&gt; tgt.scope as t then TestScriptScope(s,t);</span>\r\n  src.profile<span style=\"color: navy\"><b> -&gt; </b></span>tgt.profile<span style=\"color: navy\">;</span>\r\n  src.variable<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.variable<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptVariable<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.setup<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.setup<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptSetup<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.test<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.test<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptTest<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.teardown<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.teardown<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptTeardown<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptOrigin<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.index<span style=\"color: navy\"><b> -&gt; </b></span>tgt.index<span style=\"color: navy\">;</span>\r\n  src.profile<span style=\"color: navy\"><b> -&gt; </b></span>tgt.profile<span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptDestination<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.index<span style=\"color: navy\"><b> -&gt; </b></span>tgt.index<span style=\"color: navy\">;</span>\r\n  src.profile<span style=\"color: navy\"><b> -&gt; </b></span>tgt.profile<span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptMetadata<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.link<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.link<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptMetadataLink<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.capability<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.capability<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptMetadataCapability<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptMetadataLink<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.url<span style=\"color: navy\"><b> -&gt; </b></span>tgt.url<span style=\"color: navy\">;</span>\r\n  src.description<span style=\"color: navy\"><b> -&gt; </b></span>tgt.description<span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptMetadataCapability<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.required<span style=\"color: navy\"><b> -&gt; </b></span>tgt.required<span style=\"color: navy\">;</span>\r\n  src.validated<span style=\"color: navy\"><b> -&gt; </b></span>tgt.validated<span style=\"color: navy\">;</span>\r\n  src.description<span style=\"color: navy\"><b> -&gt; </b></span>tgt.description<span style=\"color: navy\">;</span>\r\n  src.origin<span style=\"color: navy\"><b> -&gt; </b></span>tgt.origin<span style=\"color: navy\">;</span>\r\n  src.destination<span style=\"color: navy\"><b> -&gt; </b></span>tgt.destination<span style=\"color: navy\">;</span>\r\n  src.link<span style=\"color: navy\"><b> -&gt; </b></span>tgt.link<span style=\"color: navy\">;</span>\r\n  src.capabilities<span style=\"color: navy\"><b> -&gt; </b></span>tgt.capabilities<span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><span style=\"color: navy\">// </span><span style=\"color: green\">group TestScriptScope(source src, target tgt) extends BackboneElement {</span>\r\n<span style=\"color: #b36b00\" title=\"This element was not defined prior to R5\">// src.artifact -&gt; tgt.artifact;</span>\r\n<span style=\"color: #b36b00\" title=\"This element was not defined prior to R5\">// src.conformance -&gt; tgt.conformance;</span>\r\n<span style=\"color: #b36b00\" title=\"This element was not defined prior to R5\">// src.phase -&gt; tgt.phase;</span>\r\n<span style=\"color: navy\">// </span><span style=\"color: green\">}</span>\r\n<b>group </b>TestScriptFixture<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.autocreate<span style=\"color: navy\"><b> -&gt; </b></span>tgt.autocreate<span style=\"color: navy\">;</span>\r\n  src.autodelete<span style=\"color: navy\"><b> -&gt; </b></span>tgt.autodelete<span style=\"color: navy\">;</span>\r\n  src.resource<span style=\"color: navy\"><b> -&gt; </b></span>tgt.resource<span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptVariable<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.name<span style=\"color: navy\"><b> -&gt; </b></span>tgt.name<span style=\"color: navy\">;</span>\r\n  src.defaultValue<span style=\"color: navy\"><b> -&gt; </b></span>tgt.defaultValue<span style=\"color: navy\">;</span>\r\n  src.description<span style=\"color: navy\"><b> -&gt; </b></span>tgt.description<span style=\"color: navy\">;</span>\r\n  src.expression<span style=\"color: navy\"><b> -&gt; </b></span>tgt.expression<span style=\"color: navy\">;</span>\r\n  src.headerField<span style=\"color: navy\"><b> -&gt; </b></span>tgt.headerField<span style=\"color: navy\">;</span>\r\n  src.hint<span style=\"color: navy\"><b> -&gt; </b></span>tgt.hint<span style=\"color: navy\">;</span>\r\n  src.path<span style=\"color: navy\"><b> -&gt; </b></span>tgt.path<span style=\"color: navy\">;</span>\r\n  src.sourceId<span style=\"color: navy\"><b> -&gt; </b></span>tgt.sourceId<span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptSetup<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.action<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.action<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptSetupAction<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptSetupAction<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.operation<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.operation<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptSetupActionOperation<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.assert<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.assert<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptSetupActionAssert<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptSetupActionOperation<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.type<span style=\"color: navy\"><b> -&gt; </b></span>tgt.type<span style=\"color: navy\">;</span>\r\n  src.resource<span style=\"color: navy\"><b> -&gt; </b></span>tgt.resource<span style=\"color: navy\">;</span>\r\n  src.label<span style=\"color: navy\"><b> -&gt; </b></span>tgt.label<span style=\"color: navy\">;</span>\r\n  src.description<span style=\"color: navy\"><b> -&gt; </b></span>tgt.description<span style=\"color: navy\">;</span>\r\n  src.accept<span style=\"color: navy\"><b> -&gt; </b></span>tgt.accept<span style=\"color: navy\">;</span>\r\n  src.contentType<span style=\"color: navy\"><b> -&gt; </b></span>tgt.contentType<span style=\"color: navy\">;</span>\r\n  src.destination<span style=\"color: navy\"><b> -&gt; </b></span>tgt.destination<span style=\"color: navy\">;</span>\r\n  src.encodeRequestUrl<span style=\"color: navy\"><b> -&gt; </b></span>tgt.encodeRequestUrl<span style=\"color: navy\">;</span>\r\n  src.method<b> as </b><span style=\"color: maroon\">v</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.method = <b>translate</b><span style=\"color: navy\">(</span><span style=\"color: maroon\">v</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'#TestScriptRequestMethodCode'</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'code'</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.origin<span style=\"color: navy\"><b> -&gt; </b></span>tgt.origin<span style=\"color: navy\">;</span>\r\n  src.params<span style=\"color: navy\"><b> -&gt; </b></span>tgt.params<span style=\"color: navy\">;</span>\r\n  src.requestHeader<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.requestHeader<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptSetupActionOperationRequestHeader<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.requestId<span style=\"color: navy\"><b> -&gt; </b></span>tgt.requestId<span style=\"color: navy\">;</span>\r\n  src.responseId<span style=\"color: navy\"><b> -&gt; </b></span>tgt.responseId<span style=\"color: navy\">;</span>\r\n  src.sourceId<span style=\"color: navy\"><b> -&gt; </b></span>tgt.sourceId<span style=\"color: navy\">;</span>\r\n  src.targetId<span style=\"color: navy\"><b> -&gt; </b></span>tgt.targetId<span style=\"color: navy\">;</span>\r\n  src.url<span style=\"color: navy\"><b> -&gt; </b></span>tgt.url<span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptSetupActionOperationRequestHeader<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.field<span style=\"color: navy\"><b> -&gt; </b></span>tgt.field<span style=\"color: navy\">;</span>\r\n  src.value<span style=\"color: navy\"><b> -&gt; </b></span>tgt.value<span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptSetupActionAssert<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.label<span style=\"color: navy\"><b> -&gt; </b></span>tgt.label<span style=\"color: navy\">;</span>\r\n  src.description<span style=\"color: navy\"><b> -&gt; </b></span>tgt.description<span style=\"color: navy\">;</span>\r\n  src.direction<b> as </b><span style=\"color: maroon\">v</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.direction = <b>translate</b><span style=\"color: navy\">(</span><span style=\"color: maroon\">v</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'#AssertionDirectionType'</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'code'</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.compareToSourceId<span style=\"color: navy\"><b> -&gt; </b></span>tgt.compareToSourceId<span style=\"color: navy\">;</span>\r\n  src.compareToSourceExpression<span style=\"color: navy\"><b> -&gt; </b></span>tgt.compareToSourceExpression<span style=\"color: navy\">;</span>\r\n  src.compareToSourcePath<span style=\"color: navy\"><b> -&gt; </b></span>tgt.compareToSourcePath<span style=\"color: navy\">;</span>\r\n  src.contentType<span style=\"color: navy\"><b> -&gt; </b></span>tgt.contentType<span style=\"color: navy\">;</span>\r\n  src.expression<span style=\"color: navy\"><b> -&gt; </b></span>tgt.expression<span style=\"color: navy\">;</span> <span style=\"color: navy\">// </span><span style=\"color: green\">src.defaultManualCompletion as v -&gt; tgt.defaultManualCompletion = translate(v, '#AssertionManualCompletionType', 'code');</span>\r\n  src.headerField<span style=\"color: navy\"><b> -&gt; </b></span>tgt.headerField<span style=\"color: navy\">;</span>\r\n  src.minimumId<span style=\"color: navy\"><b> -&gt; </b></span>tgt.minimumId<span style=\"color: navy\">;</span>\r\n  src.navigationLinks<span style=\"color: navy\"><b> -&gt; </b></span>tgt.navigationLinks<span style=\"color: navy\">;</span>\r\n  src.operator<b> as </b><span style=\"color: maroon\">v</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.operator = <b>translate</b><span style=\"color: navy\">(</span><span style=\"color: maroon\">v</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'#AssertionOperatorType'</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'code'</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.path<span style=\"color: navy\"><b> -&gt; </b></span>tgt.path<span style=\"color: navy\">;</span>\r\n  src.requestMethod<b> as </b><span style=\"color: maroon\">v</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.requestMethod = <b>translate</b><span style=\"color: navy\">(</span><span style=\"color: maroon\">v</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'#TestScriptRequestMethodCode'</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'code'</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.requestURL<span style=\"color: navy\"><b> -&gt; </b></span>tgt.requestURL<span style=\"color: navy\">;</span>\r\n  src.resource<span style=\"color: navy\"><b> -&gt; </b></span>tgt.resource<span style=\"color: navy\">;</span>\r\n  src.response<b> as </b><span style=\"color: maroon\">v</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.response = <b>translate</b><span style=\"color: navy\">(</span><span style=\"color: maroon\">v</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'#AssertionResponseTypes'</span><span style=\"color: navy\">, </span><span style=\"color: blue\">'code'</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.responseCode<span style=\"color: navy\"><b> -&gt; </b></span>tgt.responseCode<span style=\"color: navy\">;</span>\r\n  src.sourceId<span style=\"color: navy\"><b> -&gt; </b></span>tgt.sourceId<span style=\"color: navy\">;</span>\r\n  src.validateProfileId<span style=\"color: navy\"><b> -&gt; </b></span>tgt.validateProfileId<span style=\"color: navy\">;</span> <span style=\"color: navy\">// </span><span style=\"color: green\">src.stopTestOnFail -&gt; tgt.stopTestOnFail;</span>\r\n  src.value<span style=\"color: navy\"><b> -&gt; </b></span>tgt.value<span style=\"color: navy\">;</span>\r\n  src.warningOnly<span style=\"color: navy\"><b> -&gt; </b></span>tgt.warningOnly<span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><span style=\"color: navy\">// </span><span style=\"color: green\">group TestScriptSetupActionAssertRequirement(source src, target tgt) extends BackboneElement {</span>\r\n<span style=\"color: #b36b00\" title=\"This element was not defined prior to R5\">// src.link : uri -&gt; tgt.link;</span>\r\n<span style=\"color: #b36b00\" title=\"This element was not defined prior to R5\">// src.link : canonical -&gt; tgt.link;</span>\r\n<span style=\"color: navy\">// </span><span style=\"color: green\">}</span>\r\n<b>group </b>TestScriptTest<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.name<span style=\"color: navy\"><b> -&gt; </b></span>tgt.name<span style=\"color: navy\">;</span>\r\n  src.description<span style=\"color: navy\"><b> -&gt; </b></span>tgt.description<span style=\"color: navy\">;</span>\r\n  src.action<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.action<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptTestAction<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptTestAction<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.operation<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.operation<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptSetupActionOperation<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n  src.assert<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.assert<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptSetupActionAssert<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptTeardown<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.action<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.action<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptTeardownAction<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span><b>group </b>TestScriptTeardownAction<span style=\"color: navy\">(</span><b>source</b> <span style=\"color: maroon\">src</span>, <b>target</b> <span style=\"color: maroon\">tgt</span><span style=\"color: navy\">)</span><b> extends </b>BackboneElement<span style=\"color: navy\"> {\r\n</span>  src.operation<b> as </b><span style=\"color: maroon\">s</span><span style=\"color: navy\"><b> -&gt; </b></span>tgt.operation<b> as </b><span style=\"color: maroon\">t</span><b> then </b>TestScriptSetupActionOperation<span style=\"color: navy\">(</span><span style=\"color: maroon\">s</span><span style=\"color: navy\">, </span><span style=\"color: maroon\">t</span><span style=\"color: navy\">)</span><span style=\"color: navy\">;</span>\r\n<span style=\"color: navy\">}\r\n\r\n</span></pre></div>"},"contained":[{"resourceType":"ConceptMap","id":"AssertionDirectionType","status":"active","group":[{"source":"http://hl7.org/fhir/4.0/assert-direction-codes","target":"http://hl7.org/fhir/assert-direction-codes","element":[{"code":"response","target":[{"code":"response","relationship":"related-to"}]},{"code":"request","target":[{"code":"request","relationship":"related-to"}]}]}]},{"resourceType":"ConceptMap","id":"AssertionOperatorType","status":"active","group":[{"source":"http://hl7.org/fhir/4.0/assert-operator-codes","target":"http://hl7.org/fhir/assert-operator-codes","element":[{"code":"equals","target":[{"code":"equals","relationship":"related-to"}]},{"code":"notEquals","target":[{"code":"notEquals","relationship":"related-to"}]},{"code":"in","target":[{"code":"in","relationship":"related-to"}]},{"code":"notIn","target":[{"code":"notIn","relationship":"related-to"}]},{"code":"greaterThan","target":[{"code":"greaterThan","relationship":"related-to"}]},{"code":"lessThan","target":[{"code":"lessThan","relationship":"related-to"}]},{"code":"empty","target":[{"code":"empty","relationship":"related-to"}]},{"code":"notEmpty","target":[{"code":"notEmpty","relationship":"related-to"}]},{"code":"contains","target":[{"code":"contains","relationship":"related-to"}]},{"code":"notContains","target":[{"code":"notContains","relationship":"related-to"}]},{"code":"eval","target":[{"code":"eval","relationship":"related-to","comment":"s:\"manualEval\" - t:\"manualEval\""}]}]}]},{"resourceType":"ConceptMap","id":"AssertionResponseTypes","status":"active","group":[{"source":"http://hl7.org/fhir/4.0/assert-response-code-types","target":"http://hl7.org/fhir/assert-response-code-types","element":[{"code":"okay","target":[{"code":"okay","relationship":"related-to"}]},{"code":"created","target":[{"code":"created","relationship":"related-to","comment":"s:\"accepted\" - t:\"accepted\""}]},{"code":"noContent","target":[{"code":"noContent","relationship":"related-to","comment":"s:\"resetContent\" - t:\"resetContent\""}]},{"code":"notModified","target":[{"code":"notModified","relationship":"related-to","comment":"s:\"useProxy\" - t:\"useProxy\""}]},{"code":"bad","target":[{"code":"badRequest","relationship":"related-to","comment":"s:\"unauthorized\" - t:\"unauthorized\""}]},{"code":"forbidden","target":[{"code":"forbidden","relationship":"related-to"}]},{"code":"notFound","target":[{"code":"notFound","relationship":"related-to"}]},{"code":"methodNotAllowed","target":[{"code":"methodNotAllowed","relationship":"related-to","comment":"s:\"notAcceptable\" - t:\"notAcceptable\""}]},{"code":"conflict","target":[{"code":"conflict","relationship":"related-to"}]},{"code":"gone","target":[{"code":"gone","relationship":"related-to","comment":"s:\"lengthRequired\" - t:\"lengthRequired\""}]},{"code":"preconditionFailed","target":[{"code":"preconditionFailed","relationship":"related-to","comment":"s:\"contentTooLarge\" - t:\"contentTooLarge\""}]},{"code":"unprocessable","target":[{"code":"unprocessableContent","relationship":"related-to","comment":"s:\"upgradeRequired\" - t:\"upgradeRequired\""}]}]}]},{"resourceType":"ConceptMap","id":"PublicationStatus","status":"active","group":[{"source":"http://hl7.org/fhir/4.0/publication-status","target":"http://hl7.org/fhir/publication-status","element":[{"code":"draft","target":[{"code":"draft","relationship":"related-to"}]},{"code":"active","target":[{"code":"active","relationship":"related-to"}]},{"code":"retired","target":[{"code":"retired","relationship":"related-to"}]},{"code":"unknown","target":[{"code":"unknown","relationship":"related-to"}]}]}]},{"resourceType":"ConceptMap","id":"TestScriptRequestMethodCode","status":"active","group":[{"source":"http://hl7.org/fhir/4.0/http-operations","target":"http://hl7.org/fhir/http-operations","element":[{"code":"delete","target":[{"code":"delete","relationship":"related-to"}]},{"code":"get","target":[{"code":"get","relationship":"related-to"}]},{"code":"options","target":[{"code":"options","relationship":"related-to"}]},{"code":"patch","target":[{"code":"patch","relationship":"related-to"}]},{"code":"post","target":[{"code":"post","relationship":"related-to"}]},{"code":"put","target":[{"code":"put","relationship":"related-to"}]},{"code":"head","target":[{"code":"head","relationship":"related-to"}]}]}]}],"extension":[{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-wg","valueCode":"fhir"},{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm","valueInteger":1,"_valueInteger":{"extension":[{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-conformance-derivedFrom","valueCanonical":"http://hl7.org/fhir/extensions/ImplementationGuide/hl7.fhir.uv.extensions"}]}},{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status","valueCode":"trial-use","_valueCode":{"extension":[{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-conformance-derivedFrom","valueCanonical":"http://hl7.org/fhir/extensions/ImplementationGuide/hl7.fhir.uv.extensions"}]}}],"url":"http://hl7.org/fhir/StructureMap/TestScript4to5","version":"5.1.0","name":"TestScript4to5","title":"FML Conversion for TestScript: R4 to R5","status":"active","date":"2024-04-27T18:40:24+10:00","publisher":"HL7 International / FHIR Infrastructure","contact":[{"telecom":[{"system":"url","value":"http://www.hl7.org/Special/committees/fiwg"}]}],"description":"FMLConversionforTestScriptR4toR5","jurisdiction":[{"coding":[{"system":"http://unstats.un.org/unsd/methods/m49/m49.htm","code":"001"}]}],"structure":[{"url":"http://hl7.org/fhir/4.0/StructureDefinition/TestScript","mode":"source","alias":"TestScriptR4"},{"url":"http://hl7.org/fhir/StructureDefinition/TestScript","mode":"target","alias":"TestScriptR5"}],"import":["http://hl7.org/fhir/StructureMap/*4to5"],"group":[{"name":"TestScript","extends":"DomainResource","typeMode":"type-and-types","input":[{"name":"src","type":"TestScriptR4","mode":"source"},{"name":"tgt","type":"TestScriptR5","mode":"target"}],"rule":[{"name":"url","source":[{"context":"src","element":"url","variable":"vvv"}],"target":[{"context":"tgt","element":"url","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"identifier","source":[{"context":"src","element":"identifier","variable":"vvv"}],"target":[{"context":"tgt","element":"identifier","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"version","source":[{"context":"src","element":"version","variable":"vvv"}],"target":[{"context":"tgt","element":"version","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"name","source":[{"context":"src","element":"name","variable":"vvv"}],"target":[{"context":"tgt","element":"name","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}],"documentation":"src.versionAlgorithm : string -> tgt.versionAlgorithm;"},{"name":"title","source":[{"context":"src","element":"title","variable":"vvv"}],"target":[{"context":"tgt","element":"title","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"status","source":[{"context":"src","element":"status","variable":"v"}],"target":[{"context":"tgt","element":"status","transform":"translate","parameter":[{"valueId":"v"},{"valueString":"#PublicationStatus"},{"valueString":"code"}]}]},{"name":"experimental","source":[{"context":"src","element":"experimental","variable":"vvv"}],"target":[{"context":"tgt","element":"experimental","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"date","source":[{"context":"src","element":"date","variable":"vvv"}],"target":[{"context":"tgt","element":"date","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"publisher","source":[{"context":"src","element":"publisher","variable":"vvv"}],"target":[{"context":"tgt","element":"publisher","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"contact","source":[{"context":"src","element":"contact","variable":"vvv"}],"target":[{"context":"tgt","element":"contact","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"description","source":[{"context":"src","element":"description","variable":"vvv"}],"target":[{"context":"tgt","element":"description","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"useContext","source":[{"context":"src","element":"useContext","variable":"vvv"}],"target":[{"context":"tgt","element":"useContext","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"jurisdiction","source":[{"context":"src","element":"jurisdiction","variable":"vvv"}],"target":[{"context":"tgt","element":"jurisdiction","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"purpose","source":[{"context":"src","element":"purpose","variable":"vvv"}],"target":[{"context":"tgt","element":"purpose","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"copyright","source":[{"context":"src","element":"copyright","variable":"vvv"}],"target":[{"context":"tgt","element":"copyright","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"origin","source":[{"context":"src","element":"origin","variable":"s"}],"target":[{"context":"tgt","element":"origin","variable":"t"}],"dependent":[{"name":"TestScriptOrigin","parameter":[{"valueId":"s"},{"valueId":"t"}]}],"documentation":"src.copyrightLabel -> tgt.copyrightLabel;"},{"name":"destination","source":[{"context":"src","element":"destination","variable":"s"}],"target":[{"context":"tgt","element":"destination","variable":"t"}],"dependent":[{"name":"TestScriptDestination","parameter":[{"valueId":"s"},{"valueId":"t"}]}]},{"name":"metadata","source":[{"context":"src","element":"metadata","variable":"s"}],"target":[{"context":"tgt","element":"metadata","variable":"t"}],"dependent":[{"name":"TestScriptMetadata","parameter":[{"valueId":"s"},{"valueId":"t"}]}]},{"name":"fixture","source":[{"context":"src","element":"fixture","variable":"s"}],"target":[{"context":"tgt","element":"fixture","variable":"t"}],"dependent":[{"name":"TestScriptFixture","parameter":[{"valueId":"s"},{"valueId":"t"}]}],"documentation":"src.scope as s -> tgt.scope as t then TestScriptScope(s,t);"},{"name":"profile","source":[{"context":"src","element":"profile","variable":"vvv"}],"target":[{"context":"tgt","element":"profile","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"variable","source":[{"context":"src","element":"variable","variable":"s"}],"target":[{"context":"tgt","element":"variable","variable":"t"}],"dependent":[{"name":"TestScriptVariable","parameter":[{"valueId":"s"},{"valueId":"t"}]}]},{"name":"setup","source":[{"context":"src","element":"setup","variable":"s"}],"target":[{"context":"tgt","element":"setup","variable":"t"}],"dependent":[{"name":"TestScriptSetup","parameter":[{"valueId":"s"},{"valueId":"t"}]}]},{"name":"test","source":[{"context":"src","element":"test","variable":"s"}],"target":[{"context":"tgt","element":"test","variable":"t"}],"dependent":[{"name":"TestScriptTest","parameter":[{"valueId":"s"},{"valueId":"t"}]}]},{"name":"teardown","source":[{"context":"src","element":"teardown","variable":"s"}],"target":[{"context":"tgt","element":"teardown","variable":"t"}],"dependent":[{"name":"TestScriptTeardown","parameter":[{"valueId":"s"},{"valueId":"t"}]}]}]},{"name":"TestScriptOrigin","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"index","source":[{"context":"src","element":"index","variable":"vvv"}],"target":[{"context":"tgt","element":"index","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"profile","source":[{"context":"src","element":"profile","variable":"vvv"}],"target":[{"context":"tgt","element":"profile","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]}]},{"name":"TestScriptDestination","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"index","source":[{"context":"src","element":"index","variable":"vvv"}],"target":[{"context":"tgt","element":"index","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"profile","source":[{"context":"src","element":"profile","variable":"vvv"}],"target":[{"context":"tgt","element":"profile","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]}]},{"name":"TestScriptMetadata","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"link","source":[{"context":"src","element":"link","variable":"s"}],"target":[{"context":"tgt","element":"link","variable":"t"}],"dependent":[{"name":"TestScriptMetadataLink","parameter":[{"valueId":"s"},{"valueId":"t"}]}]},{"name":"capability","source":[{"context":"src","element":"capability","variable":"s"}],"target":[{"context":"tgt","element":"capability","variable":"t"}],"dependent":[{"name":"TestScriptMetadataCapability","parameter":[{"valueId":"s"},{"valueId":"t"}]}]}]},{"name":"TestScriptMetadataLink","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"url","source":[{"context":"src","element":"url","variable":"vvv"}],"target":[{"context":"tgt","element":"url","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"description","source":[{"context":"src","element":"description","variable":"vvv"}],"target":[{"context":"tgt","element":"description","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]}]},{"name":"TestScriptMetadataCapability","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"required","source":[{"context":"src","element":"required","variable":"vvv"}],"target":[{"context":"tgt","element":"required","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"validated","source":[{"context":"src","element":"validated","variable":"vvv"}],"target":[{"context":"tgt","element":"validated","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"description","source":[{"context":"src","element":"description","variable":"vvv"}],"target":[{"context":"tgt","element":"description","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"origin","source":[{"context":"src","element":"origin","variable":"vvv"}],"target":[{"context":"tgt","element":"origin","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"destination","source":[{"context":"src","element":"destination","variable":"vvv"}],"target":[{"context":"tgt","element":"destination","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"link","source":[{"context":"src","element":"link","variable":"vvv"}],"target":[{"context":"tgt","element":"link","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"capabilities","source":[{"context":"src","element":"capabilities","variable":"vvv"}],"target":[{"context":"tgt","element":"capabilities","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]}]},{"name":"TestScriptFixture","extends":"BackboneElement","documentation":"group TestScriptScope(source src, target tgt) extends BackboneElement {\r\nsrc.artifact -> tgt.artifact;\r\nsrc.conformance -> tgt.conformance;\r\nsrc.phase -> tgt.phase;\r\n}","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"autocreate","source":[{"context":"src","element":"autocreate","variable":"vvv"}],"target":[{"context":"tgt","element":"autocreate","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"autodelete","source":[{"context":"src","element":"autodelete","variable":"vvv"}],"target":[{"context":"tgt","element":"autodelete","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"resource","source":[{"context":"src","element":"resource","variable":"vvv"}],"target":[{"context":"tgt","element":"resource","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]}]},{"name":"TestScriptVariable","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"name","source":[{"context":"src","element":"name","variable":"vvv"}],"target":[{"context":"tgt","element":"name","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"defaultValue","source":[{"context":"src","element":"defaultValue","variable":"vvv"}],"target":[{"context":"tgt","element":"defaultValue","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"description","source":[{"context":"src","element":"description","variable":"vvv"}],"target":[{"context":"tgt","element":"description","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"expression","source":[{"context":"src","element":"expression","variable":"vvv"}],"target":[{"context":"tgt","element":"expression","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"headerField","source":[{"context":"src","element":"headerField","variable":"vvv"}],"target":[{"context":"tgt","element":"headerField","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"hint","source":[{"context":"src","element":"hint","variable":"vvv"}],"target":[{"context":"tgt","element":"hint","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"path","source":[{"context":"src","element":"path","variable":"vvv"}],"target":[{"context":"tgt","element":"path","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"sourceId","source":[{"context":"src","element":"sourceId","variable":"vvv"}],"target":[{"context":"tgt","element":"sourceId","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]}]},{"name":"TestScriptSetup","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"action","source":[{"context":"src","element":"action","variable":"s"}],"target":[{"context":"tgt","element":"action","variable":"t"}],"dependent":[{"name":"TestScriptSetupAction","parameter":[{"valueId":"s"},{"valueId":"t"}]}]}]},{"name":"TestScriptSetupAction","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"operation","source":[{"context":"src","element":"operation","variable":"s"}],"target":[{"context":"tgt","element":"operation","variable":"t"}],"dependent":[{"name":"TestScriptSetupActionOperation","parameter":[{"valueId":"s"},{"valueId":"t"}]}]},{"name":"assert","source":[{"context":"src","element":"assert","variable":"s"}],"target":[{"context":"tgt","element":"assert","variable":"t"}],"dependent":[{"name":"TestScriptSetupActionAssert","parameter":[{"valueId":"s"},{"valueId":"t"}]}]}]},{"name":"TestScriptSetupActionOperation","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"type","source":[{"context":"src","element":"type","variable":"vvv"}],"target":[{"context":"tgt","element":"type","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"resource","source":[{"context":"src","element":"resource","variable":"vvv"}],"target":[{"context":"tgt","element":"resource","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"label","source":[{"context":"src","element":"label","variable":"vvv"}],"target":[{"context":"tgt","element":"label","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"description","source":[{"context":"src","element":"description","variable":"vvv"}],"target":[{"context":"tgt","element":"description","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"accept","source":[{"context":"src","element":"accept","variable":"vvv"}],"target":[{"context":"tgt","element":"accept","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"contentType","source":[{"context":"src","element":"contentType","variable":"vvv"}],"target":[{"context":"tgt","element":"contentType","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"destination","source":[{"context":"src","element":"destination","variable":"vvv"}],"target":[{"context":"tgt","element":"destination","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"encodeRequestUrl","source":[{"context":"src","element":"encodeRequestUrl","variable":"vvv"}],"target":[{"context":"tgt","element":"encodeRequestUrl","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"method","source":[{"context":"src","element":"method","variable":"v"}],"target":[{"context":"tgt","element":"method","transform":"translate","parameter":[{"valueId":"v"},{"valueString":"#TestScriptRequestMethodCode"},{"valueString":"code"}]}]},{"name":"origin","source":[{"context":"src","element":"origin","variable":"vvv"}],"target":[{"context":"tgt","element":"origin","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"params","source":[{"context":"src","element":"params","variable":"vvv"}],"target":[{"context":"tgt","element":"params","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"requestHeader","source":[{"context":"src","element":"requestHeader","variable":"s"}],"target":[{"context":"tgt","element":"requestHeader","variable":"t"}],"dependent":[{"name":"TestScriptSetupActionOperationRequestHeader","parameter":[{"valueId":"s"},{"valueId":"t"}]}]},{"name":"requestId","source":[{"context":"src","element":"requestId","variable":"vvv"}],"target":[{"context":"tgt","element":"requestId","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"responseId","source":[{"context":"src","element":"responseId","variable":"vvv"}],"target":[{"context":"tgt","element":"responseId","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"sourceId","source":[{"context":"src","element":"sourceId","variable":"vvv"}],"target":[{"context":"tgt","element":"sourceId","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"targetId","source":[{"context":"src","element":"targetId","variable":"vvv"}],"target":[{"context":"tgt","element":"targetId","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"url","source":[{"context":"src","element":"url","variable":"vvv"}],"target":[{"context":"tgt","element":"url","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]}]},{"name":"TestScriptSetupActionOperationRequestHeader","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"field","source":[{"context":"src","element":"field","variable":"vvv"}],"target":[{"context":"tgt","element":"field","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"value","source":[{"context":"src","element":"value","variable":"vvv"}],"target":[{"context":"tgt","element":"value","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]}]},{"name":"TestScriptSetupActionAssert","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"label","source":[{"context":"src","element":"label","variable":"vvv"}],"target":[{"context":"tgt","element":"label","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"description","source":[{"context":"src","element":"description","variable":"vvv"}],"target":[{"context":"tgt","element":"description","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"direction","source":[{"context":"src","element":"direction","variable":"v"}],"target":[{"context":"tgt","element":"direction","transform":"translate","parameter":[{"valueId":"v"},{"valueString":"#AssertionDirectionType"},{"valueString":"code"}]}]},{"name":"compareToSourceId","source":[{"context":"src","element":"compareToSourceId","variable":"vvv"}],"target":[{"context":"tgt","element":"compareToSourceId","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"compareToSourceExpression","source":[{"context":"src","element":"compareToSourceExpression","variable":"vvv"}],"target":[{"context":"tgt","element":"compareToSourceExpression","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"compareToSourcePath","source":[{"context":"src","element":"compareToSourcePath","variable":"vvv"}],"target":[{"context":"tgt","element":"compareToSourcePath","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"contentType","source":[{"context":"src","element":"contentType","variable":"vvv"}],"target":[{"context":"tgt","element":"contentType","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"expression","source":[{"context":"src","element":"expression","variable":"vvv"}],"target":[{"context":"tgt","element":"expression","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}],"documentation":"src.defaultManualCompletion as v -> tgt.defaultManualCompletion = translate(v, '#AssertionManualCompletionType', 'code');"},{"name":"headerField","source":[{"context":"src","element":"headerField","variable":"vvv"}],"target":[{"context":"tgt","element":"headerField","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"minimumId","source":[{"context":"src","element":"minimumId","variable":"vvv"}],"target":[{"context":"tgt","element":"minimumId","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"navigationLinks","source":[{"context":"src","element":"navigationLinks","variable":"vvv"}],"target":[{"context":"tgt","element":"navigationLinks","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"operator","source":[{"context":"src","element":"operator","variable":"v"}],"target":[{"context":"tgt","element":"operator","transform":"translate","parameter":[{"valueId":"v"},{"valueString":"#AssertionOperatorType"},{"valueString":"code"}]}]},{"name":"path","source":[{"context":"src","element":"path","variable":"vvv"}],"target":[{"context":"tgt","element":"path","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"requestMethod","source":[{"context":"src","element":"requestMethod","variable":"v"}],"target":[{"context":"tgt","element":"requestMethod","transform":"translate","parameter":[{"valueId":"v"},{"valueString":"#TestScriptRequestMethodCode"},{"valueString":"code"}]}]},{"name":"requestURL","source":[{"context":"src","element":"requestURL","variable":"vvv"}],"target":[{"context":"tgt","element":"requestURL","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"resource","source":[{"context":"src","element":"resource","variable":"vvv"}],"target":[{"context":"tgt","element":"resource","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"response","source":[{"context":"src","element":"response","variable":"v"}],"target":[{"context":"tgt","element":"response","transform":"translate","parameter":[{"valueId":"v"},{"valueString":"#AssertionResponseTypes"},{"valueString":"code"}]}]},{"name":"responseCode","source":[{"context":"src","element":"responseCode","variable":"vvv"}],"target":[{"context":"tgt","element":"responseCode","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"sourceId","source":[{"context":"src","element":"sourceId","variable":"vvv"}],"target":[{"context":"tgt","element":"sourceId","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"validateProfileId","source":[{"context":"src","element":"validateProfileId","variable":"vvv"}],"target":[{"context":"tgt","element":"validateProfileId","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}],"documentation":"src.stopTestOnFail -> tgt.stopTestOnFail;"},{"name":"value","source":[{"context":"src","element":"value","variable":"vvv"}],"target":[{"context":"tgt","element":"value","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"warningOnly","source":[{"context":"src","element":"warningOnly","variable":"vvv"}],"target":[{"context":"tgt","element":"warningOnly","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]}]},{"name":"TestScriptTest","extends":"BackboneElement","documentation":"group TestScriptSetupActionAssertRequirement(source src, target tgt) extends BackboneElement {\r\nsrc.link : uri -> tgt.link;\r\nsrc.link : canonical -> tgt.link;\r\n}","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"name","source":[{"context":"src","element":"name","variable":"vvv"}],"target":[{"context":"tgt","element":"name","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"description","source":[{"context":"src","element":"description","variable":"vvv"}],"target":[{"context":"tgt","element":"description","variable":"vvv","transform":"create"}],"dependent":[{"name":"DefaultMappingGroupAnonymousAlias","parameter":[{"valueId":"vvv"},{"valueId":"vvv"}]}]},{"name":"action","source":[{"context":"src","element":"action","variable":"s"}],"target":[{"context":"tgt","element":"action","variable":"t"}],"dependent":[{"name":"TestScriptTestAction","parameter":[{"valueId":"s"},{"valueId":"t"}]}]}]},{"name":"TestScriptTestAction","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"operation","source":[{"context":"src","element":"operation","variable":"s"}],"target":[{"context":"tgt","element":"operation","variable":"t"}],"dependent":[{"name":"TestScriptSetupActionOperation","parameter":[{"valueId":"s"},{"valueId":"t"}]}]},{"name":"assert","source":[{"context":"src","element":"assert","variable":"s"}],"target":[{"context":"tgt","element":"assert","variable":"t"}],"dependent":[{"name":"TestScriptSetupActionAssert","parameter":[{"valueId":"s"},{"valueId":"t"}]}]}]},{"name":"TestScriptTeardown","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"action","source":[{"context":"src","element":"action","variable":"s"}],"target":[{"context":"tgt","element":"action","variable":"t"}],"dependent":[{"name":"TestScriptTeardownAction","parameter":[{"valueId":"s"},{"valueId":"t"}]}]}]},{"name":"TestScriptTeardownAction","extends":"BackboneElement","input":[{"name":"src","mode":"source"},{"name":"tgt","mode":"target"}],"rule":[{"name":"operation","source":[{"context":"src","element":"operation","variable":"s"}],"target":[{"context":"tgt","element":"operation","variable":"t"}],"dependent":[{"name":"TestScriptSetupActionOperation","parameter":[{"valueId":"s"},{"valueId":"t"}]}]}]}]}